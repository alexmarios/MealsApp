package mealsapp.GUI;

import com.google.gson.JsonObject;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.BaseFont;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.*;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import mealsapp.API.JsonParsers;
import mealsapp.MealClasses.Meal;
import static mealsapp.Charts.ColumnChart.ColumnChart;
import static mealsapp.Charts.PieChart.PieChart;
import mealsapp.DB.MealsQueryOperations;
import static mealsapp.GUI.CommandList.meal;
import mealsapp.MealClasses.MealCategory;

public class MainForm extends javax.swing.JFrame {

    /**
     * Creates new form MainForm
     */
    Color defaultColor, clickedColor;

    MealCategory chossenMealCategory = null;
    List<MealCategory> mealCategories = null;
    List<Meal> meals = null;
    ArrayList<String> areas = null;
    ArrayList<String[]> ingredients = null;
    boolean editMode = false;

    public MainForm() {
        initComponents();

        clickedColor = new Color(61, 61, 61);
        defaultColor = new Color(158, 134, 49);

        //Τοποθετηση Εικόνας στην αρχική 
        ImageIcon imgIcon = new ImageIcon("resources/Mousaka.png");
        imgIcon = new ImageIcon(imgIcon.getImage().getScaledInstance(jLabel18.getWidth(), jLabel18.getHeight(), Image.SCALE_SMOOTH));
        jLabel18.setIcon(imgIcon);
        
        
        
        

        //Τοποθέτηση της εφαρμογής στο κέντρο της οθόνης κατα το άνοιγμα
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        MainPanel = new javax.swing.JPanel();
        LeftPanel = new javax.swing.JPanel();
        menuSearchPnl = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        menuExitPnl = new javax.swing.JPanel();
        extBtn = new javax.swing.JLabel();
        menuStatsPnl = new javax.swing.JPanel();
        statsBtn = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        TopPanel = new javax.swing.JPanel();
        FocusPanel = new javax.swing.JTabbedPane();
        IntroPnl = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        MealDisplay = new javax.swing.JPanel();
        MealPanel = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        sbnTxt = new javax.swing.JTextField();
        sbnSearchBtn = new javax.swing.JButton();
        sbnSaveBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        deleteBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        RandomMealBtn = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        sbnAreaTxt = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        sbnCategoryTxt = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        sbnMealNameTxt = new javax.swing.JTextField();
        UrlLblSbn = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        sbnImageLabel = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        sbnInstructions = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ingredientsTable = new javax.swing.JTable();
        CategoryDisplay = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        sbcComboBox = new javax.swing.JComboBox<>();
        GeneralSearchPnl = new javax.swing.JTabbedPane();
        ByNamePnl = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        ApiDataRadio = new javax.swing.JRadioButton();
        DBdataRadio = new javax.swing.JRadioButton();
        searchByNameTxt = new javax.swing.JTextField();
        SearchByNameBtn = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel16 = new javax.swing.JLabel();
        ByCategoryPnl = new javax.swing.JPanel();
        jLabelMealCategoryImage = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        JListMeal = new javax.swing.JList<>();
        jPanel22 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        categoryInstructionsPnl = new javax.swing.JTextPane();
        ByAreaPnl = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();
        jScrollPane12 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList<>();
        jLabel14 = new javax.swing.JLabel();
        ByIngredientPnl = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel24 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabelMealIngreImage = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        StatsDisplay = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        statsExpBtn = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        statsComboMenu = new javax.swing.JComboBox<>();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        TwoDStatsPnl = new javax.swing.JPanel();
        PieStatsPnl = new javax.swing.JPanel();
        TableStatsPnl = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        StatsJTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Meals App");
        setResizable(false);

        MainPanel.setBackground(new java.awt.Color(61, 61, 61));
        MainPanel.setBorder(null);
        MainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LeftPanel.setBackground(new java.awt.Color(158, 134, 49));

        menuSearchPnl.setBackground(new java.awt.Color(158, 134, 49));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
        });

        javax.swing.GroupLayout menuSearchPnlLayout = new javax.swing.GroupLayout(menuSearchPnl);
        menuSearchPnl.setLayout(menuSearchPnlLayout);
        menuSearchPnlLayout.setHorizontalGroup(
            menuSearchPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuSearchPnlLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        menuSearchPnlLayout.setVerticalGroup(
            menuSearchPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        menuExitPnl.setBackground(new java.awt.Color(158, 134, 49));

        extBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        extBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        extBtn.setText("Exit");
        extBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                extBtnMousePressed(evt);
            }
        });

        javax.swing.GroupLayout menuExitPnlLayout = new javax.swing.GroupLayout(menuExitPnl);
        menuExitPnl.setLayout(menuExitPnlLayout);
        menuExitPnlLayout.setHorizontalGroup(
            menuExitPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(menuExitPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(menuExitPnlLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(extBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        menuExitPnlLayout.setVerticalGroup(
            menuExitPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(menuExitPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(menuExitPnlLayout.createSequentialGroup()
                    .addComponent(extBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        menuStatsPnl.setBackground(new java.awt.Color(158, 134, 49));

        statsBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        statsBtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        statsBtn.setText("Statistics");
        statsBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                statsBtnMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                statsBtnMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout menuStatsPnlLayout = new javax.swing.GroupLayout(menuStatsPnl);
        menuStatsPnl.setLayout(menuStatsPnlLayout);
        menuStatsPnlLayout.setHorizontalGroup(
            menuStatsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuStatsPnlLayout.createSequentialGroup()
                .addComponent(statsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        menuStatsPnlLayout.setVerticalGroup(
            menuStatsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        try{

            var mainfontPath = "resources/Harlow_Solid_Italic.ttf";
            var bf = BaseFont.createFont(mainfontPath, BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
            // Create a font object with the Harlow Solid Italic font
            var font = new com.itextpdf.text.Font(bf, 22);

        } catch (Exception e) {
            //e.printStackTrace();
        }
        jLabel3.setFont(new java.awt.Font("Harlow Solid Italic", 0, 36)); // NOI18N
        jLabel3.setText("Meals App");

        jPanel3.setBackground(new java.awt.Color(158, 134, 49));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Advanced Search");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel11MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout LeftPanelLayout = new javax.swing.GroupLayout(LeftPanel);
        LeftPanel.setLayout(LeftPanelLayout);
        LeftPanelLayout.setHorizontalGroup(
            LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuExitPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(LeftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LeftPanelLayout.createSequentialGroup()
                .addGroup(LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(menuSearchPnl, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(menuStatsPnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        LeftPanelLayout.setVerticalGroup(
            LeftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LeftPanelLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jLabel3)
                .addGap(130, 130, 130)
                .addComponent(menuSearchPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(menuStatsPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(menuExitPnl, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        MainPanel.add(LeftPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 200, 750));

        TopPanel.setBackground(new java.awt.Color(158, 134, 49));

        javax.swing.GroupLayout TopPanelLayout = new javax.swing.GroupLayout(TopPanel);
        TopPanel.setLayout(TopPanelLayout);
        TopPanelLayout.setHorizontalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );
        TopPanelLayout.setVerticalGroup(
            TopPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        MainPanel.add(TopPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 0, 850, 30));

        FocusPanel.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        IntroPnl.setBackground(new java.awt.Color(45, 43, 46));
        IntroPnl.setBorder(null);

        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setForeground(java.awt.Color.white);
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Welcome to Meals App");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel20.setForeground(java.awt.Color.white);
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Delicious meals at your fingertips with just a tap!");

        javax.swing.GroupLayout IntroPnlLayout = new javax.swing.GroupLayout(IntroPnl);
        IntroPnl.setLayout(IntroPnlLayout);
        IntroPnlLayout.setHorizontalGroup(
            IntroPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IntroPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(IntroPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IntroPnlLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, 822, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        IntroPnlLayout.setVerticalGroup(
            IntroPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IntroPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE))
        );

        FocusPanel.addTab("tab4", IntroPnl);

        MealDisplay.setBorder(null);

        MealPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel11.setBackground(new java.awt.Color(158, 134, 49));

        sbnTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sbnTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sbnTxt.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        sbnSearchBtn.setText("I Am Feeling Lucky");
        sbnSearchBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sbnSearchBtnMousePressed(evt);
            }
        });

        sbnSaveBtn.setText("Save");
        sbnSaveBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                sbnSaveBtnMousePressed(evt);
            }
        });

        updateBtn.setText("Edit");
        updateBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                updateBtnMousePressed(evt);
            }
        });

        deleteBtn.setText("Delete");
        deleteBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                deleteBtnMousePressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Meal Display");

        RandomMealBtn.setText("Random Meal");
        RandomMealBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                RandomMealBtnMousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(RandomMealBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sbnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sbnSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sbnSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(updateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 21, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(updateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deleteBtn))
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sbnSearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sbnSaveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(sbnTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(RandomMealBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        MealPanel.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 110));

        jPanel12.setBackground(new java.awt.Color(61, 61, 61));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel14.setBackground(new java.awt.Color(61, 61, 61));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel15.setBackground(new java.awt.Color(61, 61, 61));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Area");

        sbnAreaTxt.setEditable(false);
        sbnAreaTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sbnAreaTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sbnAreaTxt.setText("Area");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sbnAreaTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addComponent(sbnAreaTxt)
                .addContainerGap())
        );

        jPanel14.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 490, 60));

        jPanel16.setBackground(new java.awt.Color(61, 61, 61));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Category");

        sbnCategoryTxt.setEditable(false);
        sbnCategoryTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sbnCategoryTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sbnCategoryTxt.setText("Category");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sbnCategoryTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addComponent(sbnCategoryTxt)
                .addContainerGap())
        );

        jPanel14.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 140, 480, 60));

        jPanel17.setBackground(new java.awt.Color(61, 61, 61));
        jPanel17.setForeground(new java.awt.Color(255, 255, 255));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Name");

        sbnMealNameTxt.setEditable(false);
        sbnMealNameTxt.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        sbnMealNameTxt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        sbnMealNameTxt.setText("Name");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sbnMealNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addComponent(sbnMealNameTxt)
                .addContainerGap())
        );

        jPanel14.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 520, 60));

        UrlLblSbn.setBackground(new java.awt.Color(255, 255, 255));
        UrlLblSbn.setFont(UrlLblSbn.getFont());
        UrlLblSbn.setForeground(java.awt.Color.white);
        jPanel14.add(UrlLblSbn, new org.netbeans.lib.awtextra.AbsoluteConstraints(139, 270, 330, 30));

        jPanel12.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 480, 350));

        jPanel18.setBackground(new java.awt.Color(61, 61, 61));

        sbnImageLabel.setBackground(new java.awt.Color(255, 255, 255));
        sbnImageLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        sbnImageLabel.setForeground(java.awt.Color.white);
        sbnImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sbnImageLabel.setText("Image");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel18Layout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addComponent(sbnImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(sbnImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel12.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, 360, 350));

        MealPanel.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 860, 350));

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Instructions");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MealPanel.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 460, 530, 40));

        sbnInstructions.setEditable(false);
        sbnInstructions.setColumns(20);
        sbnInstructions.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sbnInstructions.setLineWrap(true);
        sbnInstructions.setRows(20);
        sbnInstructions.setToolTipText("");
        sbnInstructions.setWrapStyleWord(true);
        sbnInstructions.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(sbnInstructions);

        MealPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 500, 530, 220));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Ingredients");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        MealPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 310, 40));

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ingredientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ingredientsTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(ingredientsTable);
        Object[][] data = new Object[20][2];
        String[] columns = {"Ingredient", "Measure"};

        jPanel4.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 300, 220));

        MealPanel.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 310, 220));

        javax.swing.GroupLayout MealDisplayLayout = new javax.swing.GroupLayout(MealDisplay);
        MealDisplay.setLayout(MealDisplayLayout);
        MealDisplayLayout.setHorizontalGroup(
            MealDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MealDisplayLayout.createSequentialGroup()
                .addComponent(MealPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        MealDisplayLayout.setVerticalGroup(
            MealDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MealPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        FocusPanel.addTab("tab1", MealDisplay);

        CategoryDisplay.setBackground(new java.awt.Color(61, 61, 61));
        CategoryDisplay.setBorder(null);

        jPanel19.setBackground(new java.awt.Color(61, 61, 61));
        jPanel19.setBorder(null);
        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel20.setBackground(new java.awt.Color(158, 134, 49));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Advanced Search");

        sbcComboBox.setMaximumRowCount(4);
        sbcComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Search By Category", "Search By Name", "Search By Area", "Search By Ingredient", " " }));
        sbcComboBox.setSelectedIndex(-1);
        sbcComboBox.setToolTipText("");
        sbcComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbcComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 839, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 21, Short.MAX_VALUE))
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(sbcComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(sbcComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel19.add(jPanel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 110));

        ByNamePnl.setBackground(new java.awt.Color(61, 61, 61));

        jPanel5.setBackground(new java.awt.Color(61, 61, 61));

        ApiDataRadio.setBackground(new java.awt.Color(61, 61, 61));
        buttonGroup1.add(ApiDataRadio);
        ApiDataRadio.setForeground(java.awt.Color.white);
        ApiDataRadio.setSelected(true);
        ApiDataRadio.setText("API");
        ApiDataRadio.setActionCommand("API ");

        DBdataRadio.setBackground(new java.awt.Color(61, 61, 61));
        buttonGroup1.add(DBdataRadio);
        DBdataRadio.setForeground(java.awt.Color.white);
        DBdataRadio.setText("Database");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(ApiDataRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DBdataRadio)
                .addGap(0, 123, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ApiDataRadio)
                    .addComponent(DBdataRadio))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        searchByNameTxt.setBackground(java.awt.Color.white);
        searchByNameTxt.setForeground(java.awt.Color.black);
        searchByNameTxt.setToolTipText("");

        SearchByNameBtn.setText("Search");
        SearchByNameBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                SearchByNameBtnMousePressed(evt);
            }
        });

        jScrollPane7.setBackground(new java.awt.Color(61, 61, 61));
        jScrollPane7.setBorder(null);

        jList1.setBackground(new java.awt.Color(61, 61, 61));
        jList1.setBorder(null);
        jList1.setForeground(java.awt.Color.white);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList1MousePressed(evt);
            }
        });
        jScrollPane7.setViewportView(jList1);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(java.awt.Color.white);
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Search By Name");

        javax.swing.GroupLayout ByNamePnlLayout = new javax.swing.GroupLayout(ByNamePnl);
        ByNamePnl.setLayout(ByNamePnlLayout);
        ByNamePnlLayout.setHorizontalGroup(
            ByNamePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ByNamePnlLayout.createSequentialGroup()
                .addGroup(ByNamePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ByNamePnlLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ByNamePnlLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(ByNamePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SearchByNameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchByNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 215, Short.MAX_VALUE)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(25, 25, 25))
        );
        ByNamePnlLayout.setVerticalGroup(
            ByNamePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ByNamePnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(ByNamePnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ByNamePnlLayout.createSequentialGroup()
                        .addComponent(searchByNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchByNameBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 423, Short.MAX_VALUE))
                    .addComponent(jScrollPane7))
                .addContainerGap())
        );

        GeneralSearchPnl.addTab("tab2", ByNamePnl);

        ByCategoryPnl.setBackground(new java.awt.Color(61, 61, 61));

        jScrollPane4.setBorder(null);

        jList3.setBackground(new java.awt.Color(61, 61, 61));
        jList3.setBorder(null);
        jList3.setForeground(new java.awt.Color(255, 255, 255));
        jList3.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList3MousePressed(evt);
            }
        });
        jScrollPane4.setViewportView(jList3);

        jScrollPane2.setBorder(null);

        JListMeal.setBackground(new java.awt.Color(61, 61, 61));
        JListMeal.setForeground(new java.awt.Color(255, 255, 255));
        JListMeal.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {  };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        JListMeal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        JListMeal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JListMealMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(JListMeal);

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Description");

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
        );

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setForeground(java.awt.Color.white);
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Search By Category");

        categoryInstructionsPnl.setBackground(new java.awt.Color(61, 61, 61));
        categoryInstructionsPnl.setForeground(java.awt.Color.white);
        jScrollPane3.setViewportView(categoryInstructionsPnl);

        javax.swing.GroupLayout ByCategoryPnlLayout = new javax.swing.GroupLayout(ByCategoryPnl);
        ByCategoryPnl.setLayout(ByCategoryPnlLayout);
        ByCategoryPnlLayout.setHorizontalGroup(
            ByCategoryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ByCategoryPnlLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(ByCategoryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ByCategoryPnlLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(ByCategoryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelMealCategoryImage, javax.swing.GroupLayout.PREFERRED_SIZE, 475, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)))
                .addContainerGap())
        );
        ByCategoryPnlLayout.setVerticalGroup(
            ByCategoryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ByCategoryPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ByCategoryPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ByCategoryPnlLayout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelMealCategoryImage, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        GeneralSearchPnl.addTab("tab3", ByCategoryPnl);

        ByAreaPnl.setBackground(new java.awt.Color(61, 61, 61));

        jScrollPane11.setBackground(new java.awt.Color(61, 61, 61));
        jScrollPane11.setBorder(null);
        jScrollPane11.setForeground(java.awt.Color.white);

        jList5.setBackground(new java.awt.Color(61, 61, 61));
        jList5.setBorder(null);
        jList5.setForeground(java.awt.Color.white);
        jList5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList5MousePressed(evt);
            }
        });
        jScrollPane11.setViewportView(jList5);

        jScrollPane12.setBackground(new java.awt.Color(61, 61, 61));
        jScrollPane12.setBorder(null);
        jScrollPane12.setForeground(java.awt.Color.white);

        jList6.setBackground(new java.awt.Color(61, 61, 61));
        jList6.setBorder(null);
        jList6.setForeground(java.awt.Color.white);
        jList6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList6MousePressed(evt);
            }
        });
        jScrollPane12.setViewportView(jList6);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setForeground(java.awt.Color.white);
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Search By Area");

        javax.swing.GroupLayout ByAreaPnlLayout = new javax.swing.GroupLayout(ByAreaPnl);
        ByAreaPnl.setLayout(ByAreaPnlLayout);
        ByAreaPnlLayout.setHorizontalGroup(
            ByAreaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ByAreaPnlLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        ByAreaPnlLayout.setVerticalGroup(
            ByAreaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ByAreaPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ByAreaPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)
                    .addComponent(jScrollPane12))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        GeneralSearchPnl.addTab("tab4", ByAreaPnl);

        ByIngredientPnl.setBackground(new java.awt.Color(61, 61, 61));

        jScrollPane8.setBackground(new java.awt.Color(61, 61, 61));
        jScrollPane8.setBorder(null);
        jScrollPane8.setForeground(java.awt.Color.white);

        jList2.setBackground(new java.awt.Color(61, 61, 61));
        jList2.setForeground(java.awt.Color.white);
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList2MousePressed(evt);
            }
        });
        jScrollPane8.setViewportView(jList2);

        jScrollPane9.setBorder(null);

        jList4.setBackground(new java.awt.Color(61, 61, 61));
        jList4.setBorder(null);
        jList4.setForeground(java.awt.Color.white);
        jList4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList4MousePressed(evt);
            }
        });
        jScrollPane9.setViewportView(jList4);

        jScrollPane10.setBackground(new java.awt.Color(61, 61, 61));
        jScrollPane10.setForeground(java.awt.Color.white);

        jTextPane1.setBackground(new java.awt.Color(61, 61, 61));
        jTextPane1.setBorder(null);
        jTextPane1.setForeground(java.awt.Color.white);
        jScrollPane10.setViewportView(jTextPane1);

        jPanel24.setBackground(new java.awt.Color(255, 255, 255));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Description");

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
        );

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setForeground(java.awt.Color.white);
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Search By Ingredient");

        javax.swing.GroupLayout ByIngredientPnlLayout = new javax.swing.GroupLayout(ByIngredientPnl);
        ByIngredientPnl.setLayout(ByIngredientPnlLayout);
        ByIngredientPnlLayout.setHorizontalGroup(
            ByIngredientPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ByIngredientPnlLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ByIngredientPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabelMealIngreImage, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ByIngredientPnlLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 823, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        ByIngredientPnlLayout.setVerticalGroup(
            ByIngredientPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ByIngredientPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ByIngredientPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ByIngredientPnlLayout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabelMealIngreImage, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8))
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        GeneralSearchPnl.addTab("tab5", ByIngredientPnl);

        jPanel19.add(GeneralSearchPnl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 840, 640));

        javax.swing.GroupLayout CategoryDisplayLayout = new javax.swing.GroupLayout(CategoryDisplay);
        CategoryDisplay.setLayout(CategoryDisplayLayout);
        CategoryDisplayLayout.setHorizontalGroup(
            CategoryDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, 852, Short.MAX_VALUE)
        );
        CategoryDisplayLayout.setVerticalGroup(
            CategoryDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        FocusPanel.addTab("tab2", CategoryDisplay);

        StatsDisplay.setBackground(new java.awt.Color(61, 61, 61));
        StatsDisplay.setBorder(null);

        jPanel21.setBackground(new java.awt.Color(61, 61, 61));
        jPanel21.setBorder(null);
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel23.setBackground(new java.awt.Color(158, 134, 49));
        jPanel23.setBorder(null);

        statsExpBtn.setText("SaveAs PDF");
        statsExpBtn.setFocusable(false);
        statsExpBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                statsExpBtnMousePressed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Statistics");

        statsComboMenu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "3D Columns", "3D Pie", "Table" }));
        statsComboMenu.setSelectedIndex(0);
        statsComboMenu.setSelectedItem(0);
        statsComboMenu.setToolTipText("");
        statsComboMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsComboMenuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(statsComboMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 499, Short.MAX_VALUE)
                .addComponent(statsExpBtn)
                .addGap(56, 56, 56))
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel23Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(statsExpBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(statsComboMenu))
                .addContainerGap())
        );

        jPanel21.add(jPanel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 860, 110));

        jTabbedPane2.setBackground(new java.awt.Color(61, 61, 61));
        jTabbedPane2.setBorder(null);

        TwoDStatsPnl.setBackground(new java.awt.Color(61, 61, 61));
        TwoDStatsPnl.setBorder(null);
        TwoDStatsPnl.setAutoscrolls(true);

        javax.swing.GroupLayout TwoDStatsPnlLayout = new javax.swing.GroupLayout(TwoDStatsPnl);
        TwoDStatsPnl.setLayout(TwoDStatsPnlLayout);
        TwoDStatsPnlLayout.setHorizontalGroup(
            TwoDStatsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );
        TwoDStatsPnlLayout.setVerticalGroup(
            TwoDStatsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 611, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("tab1", TwoDStatsPnl);

        PieStatsPnl.setBackground(new java.awt.Color(61, 61, 61));
        PieStatsPnl.setBorder(null);

        javax.swing.GroupLayout PieStatsPnlLayout = new javax.swing.GroupLayout(PieStatsPnl);
        PieStatsPnl.setLayout(PieStatsPnlLayout);
        PieStatsPnlLayout.setHorizontalGroup(
            PieStatsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );
        PieStatsPnlLayout.setVerticalGroup(
            PieStatsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("tab2", PieStatsPnl);

        TableStatsPnl.setBackground(new java.awt.Color(61, 61, 61));
        TableStatsPnl.setBorder(null);

        jScrollPane6.setBackground(new java.awt.Color(61, 61, 61));
        jScrollPane6.setBorder(null);

        StatsJTable.setBorder(null);
        StatsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        StatsJTable.setColumnSelectionAllowed(true);
        jScrollPane6.setViewportView(StatsJTable);

        javax.swing.GroupLayout TableStatsPnlLayout = new javax.swing.GroupLayout(TableStatsPnl);
        TableStatsPnl.setLayout(TableStatsPnlLayout);
        TableStatsPnlLayout.setHorizontalGroup(
            TableStatsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TableStatsPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 844, Short.MAX_VALUE))
        );
        TableStatsPnlLayout.setVerticalGroup(
            TableStatsPnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TableStatsPnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("tab3", TableStatsPnl);

        jPanel21.add(jTabbedPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 850, 640));

        javax.swing.GroupLayout StatsDisplayLayout = new javax.swing.GroupLayout(StatsDisplay);
        StatsDisplay.setLayout(StatsDisplayLayout);
        StatsDisplayLayout.setHorizontalGroup(
            StatsDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StatsDisplayLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, 852, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        StatsDisplayLayout.setVerticalGroup(
            StatsDisplayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel21, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        FocusPanel.addTab("tab3", StatsDisplay);

        MainPanel.add(FocusPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, 840, 750));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed

        FocusPanel.setSelectedIndex(1);
        menuSearchPnl.setBackground(clickedColor);
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased

        menuSearchPnl.setBackground(defaultColor);
    }//GEN-LAST:event_jLabel1MouseReleased

    private void statsBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statsBtnMousePressed

        FocusPanel.setSelectedIndex(3);
        menuStatsPnl.setBackground(clickedColor);
        statsComboMenu.setSelectedIndex(0);
    }//GEN-LAST:event_statsBtnMousePressed

    private void extBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_extBtnMousePressed

        menuExitPnl.setBackground(clickedColor);
        System.exit(0);
    }//GEN-LAST:event_extBtnMousePressed

    private void sbcComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbcComboBoxActionPerformed

        String s = (String) sbcComboBox.getSelectedItem();
        switch (s) {
            case "Search By Name" -> {
                GeneralSearchPnl.setSelectedIndex(0);
                sbcComboBox.setSelectedIndex(1);
            }
            case "Search By Category" -> {
                GeneralSearchPnl.setSelectedIndex(1);
                sbcComboBox.setSelectedIndex(0);
                //Inserts Accending Meal Categories to JTable and display them

                mealCategories = JsonParsers.getAllMealCategories();
                DefaultListModel<String> model = CommandList.getCategoriesModel(mealCategories);
                jList3.setModel(model);

                if ((model.isEmpty())) {
                    MainForm.errorFound("Failed to grab Meals Categories, please check your Internet connection!", "Error");
                }
            }
            case "Search By Area" -> {
                GeneralSearchPnl.setSelectedIndex(2);
                sbcComboBox.setSelectedIndex(2);
                areas = JsonParsers.getAllArea();
                DefaultListModel<String> model = CommandList.getAreaModel(areas);
                jList5.setModel(model);
                if ((model.isEmpty())) {
                    MainForm.errorFound("Failed to grab Areas, please check your Internet connection!", "Error");
                }

            }

            case "Search By Ingredient" -> {
                GeneralSearchPnl.setSelectedIndex(3);
                sbcComboBox.setSelectedIndex(3);
                ingredients = JsonParsers.getAllIngredient();
                DefaultListModel<String> model = CommandList.getIngredientsModel(ingredients);
                jList2.setModel(model);
                if ((model.isEmpty())) {
                    MainForm.errorFound("Failed to grab Ingredients, please check your Internet connection!", "Error");
                }

            }
        }

    }//GEN-LAST:event_sbcComboBoxActionPerformed

    private void statsComboMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsComboMenuActionPerformed

        String s = (String) statsComboMenu.getSelectedItem();
        switch (s) {
            case "3D Columns" -> {

                jTabbedPane2.setSelectedIndex(0);

                TwoDStatsPnl.setSize(840, 608);

                TwoDStatsPnl.removeAll();
                TwoDStatsPnl.add(ColumnChart());
                TwoDStatsPnl.setVisible(true);

            }
            case "3D Pie" -> {
                jTabbedPane2.setSelectedIndex(1);
                jTabbedPane2.setSelectedIndex(0);

                TwoDStatsPnl.setSize(800, 600);

                TwoDStatsPnl.removeAll();
                TwoDStatsPnl.add(PieChart());

                TwoDStatsPnl.setVisible(true);
            }
            case "Table" -> {

                jTabbedPane2.setSelectedIndex(2);
                // Set the table model to the ingredientsTable
                StatsJTable.setModel(CommandList.getTableModel());
                //Makes table not editable
                StatsJTable.setDefaultEditor(Object.class, null);
            }

        }
    }//GEN-LAST:event_statsComboMenuActionPerformed

    private void sbnSearchBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sbnSearchBtnMousePressed
        try {

            CommandList.searchCommand(sbnTxt.getText());
        } catch (MalformedURLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_sbnSearchBtnMousePressed

    private void updateBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBtnMousePressed

        if (ingredientsTable.getDefaultEditor(Object.class) == null) {
            ingredientsTable.setDefaultEditor(Object.class, new DefaultCellEditor(new JTextField()));
        }

        // Enable editing of the other components
        sbnAreaTxt.setEditable(true);
        sbnCategoryTxt.setEditable(true);
        sbnMealNameTxt.setEditable(true);
        sbnInstructions.setEditable(true);
        ingredientsTable.removeAll();
        editMode = true;
    }//GEN-LAST:event_updateBtnMousePressed

    private void deleteBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteBtnMousePressed

        boolean validChoise = CommandList.userDeletesMeal(sbnMealNameTxt.getText());
        if (validChoise) {

            //Clears GUI
            MainForm.sbnAreaTxt.setText("");
            sbnCategoryTxt.setText("");
            sbnMealNameTxt.setText("");
            sbnAreaTxt.setText("");
            sbnInstructions.setText("");

            //Clears JTable Data
            int numRows = ingredientsTable.getRowCount();
            int numCols = ingredientsTable.getColumnCount();

            for (int i = 0; i < numRows; i++) {
                for (int j = 0; j < numCols; j++) {
                    ingredientsTable.setValueAt(null, i, j);
                }
            }

            sbnImageLabel.setIcon(null);
            sbnImageLabel.setText("");
            UrlLblSbn.setCursor((Cursor.getDefaultCursor()));
//            UrlLblSbn.removeMouseListener(UrlLblSbn.getMouseListeners()[0]);
            UrlLblSbn.setText("");

            //Clears search results Lists
            jList1.setModel(new DefaultListModel<>());

        }

    }//GEN-LAST:event_deleteBtnMousePressed

    private void statsBtnMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statsBtnMouseReleased

        menuStatsPnl.setBackground(defaultColor);

    }//GEN-LAST:event_statsBtnMouseReleased

    private void sbnSaveBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sbnSaveBtnMousePressed

        sbnAreaTxt.setEditable(false);
        sbnCategoryTxt.setEditable(false);
        sbnMealNameTxt.setEditable(false);
        sbnInstructions.setEditable(false);

        //setEditable(false) for table
        ingredientsTable.setDefaultEditor(Object.class, null);

        Map<String, Object> dataFromUser = new HashMap<>();

        dataFromUser.put("sbnCategoryTxt", sbnCategoryTxt);
        dataFromUser.put("sbnTitleTxt", sbnMealNameTxt);
        dataFromUser.put("sbnInstructions", sbnInstructions);
        dataFromUser.put("ingredientsTable", ingredientsTable);
        dataFromUser.put("sbnAreaTxt", sbnAreaTxt);
        dataFromUser.put("sbnImageLabel", sbnImageLabel.getText());
        editMode = false;

        CommandList.saveMeal(sbnMealNameTxt.getText(), dataFromUser);
    }//GEN-LAST:event_sbnSaveBtnMousePressed

    private void statsExpBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statsExpBtnMousePressed

        int userView = statsComboMenu.getSelectedIndex();
        try {
            CommandList.printPDF(userView);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_statsExpBtnMousePressed

    private void JListMealMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JListMealMousePressed

        try {
            //String UserSelectedMeal = JListMeal.getSelectedValue();

            if (JListMeal.getSelectedValue() != null) {

                FocusPanel.setSelectedIndex(1);

                //searchByMealID(String userMeal, String idString)
                for (int i = 0; i < meals.size(); i++) {
                    if (JListMeal.getSelectedValue().equals(meals.get(i).getStrmeal())) {
                        CommandList.searchByMealID(meals.get(i).getIdmeal());
                    }
                }
            }
        } catch (MalformedURLException ex) {
            //Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_JListMealMousePressed

    private void jList3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList3MousePressed

        try {

            for (int i = 0; i < mealCategories.size(); i++) {
                if (jList3.getSelectedValue().equals(mealCategories.get(i).getStrcategory())) {

                    chossenMealCategory = mealCategories.get(i);
                    //put description etc
                    categoryInstructionsPnl.setText(chossenMealCategory.getStrcategorydescription());

                    categoryInstructionsPnl.setCaretPosition(0);
                    jList3.setSelectionBackground(defaultColor);
                    //set image
                    try {
                        if (chossenMealCategory.getStrcategorythumb().contains("www")) {
                            ImageIcon image = new ImageIcon(new URL(chossenMealCategory.getStrcategorythumb()));
                            Image scaledImage = image.getImage().getScaledInstance(sbnImageLabel.getWidth(), sbnImageLabel.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon scaledIcon = new ImageIcon(scaledImage);
                            jLabelMealCategoryImage.setIcon(scaledIcon);
                            jLabelMealCategoryImage.setText("");

                        }

                    } catch (Exception e) {
                        jLabelMealCategoryImage.setIcon(null);
                        jLabelMealCategoryImage.setText("Image Not Available");
                    }
                    meals = JsonParsers.getAllMealByCategory(chossenMealCategory.getStrcategory());
                    JListMeal.setModel(CommandList.updateModelMealList(meals));

                }
            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_jList3MousePressed

    private void jLabel11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MousePressed

        FocusPanel.setSelectedIndex(2);
    }//GEN-LAST:event_jLabel11MousePressed

    private void RandomMealBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RandomMealBtnMousePressed

        try {
            CommandList.randomMeal();

        } catch (MalformedURLException ex) {
            Logger.getLogger(MainForm.class
                    .getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_RandomMealBtnMousePressed

    private void SearchByNameBtnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchByNameBtnMousePressed

        String searchValue = searchByNameTxt.getText();

        if (ApiDataRadio.isSelected()) {

            JsonObject getAllMealsJsonString = JsonParsers.getAllMealsJsonString(searchValue);

            meals = JsonParsers.getAllMealBySearch(getAllMealsJsonString);

            jList1.setModel(CommandList.updateModelMealList(meals));

        } else if (DBdataRadio.isSelected()) {
            meals = MealsQueryOperations.getLikeMealsFromDB(searchValue);

            jList1.setModel(CommandList.updateModelMealList(meals));
        }


    }//GEN-LAST:event_SearchByNameBtnMousePressed

    private void jList6MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList6MousePressed

        try {
            //String UserSelectedMeal = JListMeal.getSelectedValue();

            if (jList5.getSelectedValue() != null) {
                for (int i = 0; i < meals.size(); i++) {

                    if (jList6.getSelectedValue().equals(meals.get(i).getStrmeal())) {
                        CommandList.searchByMealID(meals.get(i).getIdmeal());
                        FocusPanel.setSelectedIndex(1);
                    }
                }
            }
        } catch (MalformedURLException ex) {
            //Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jList6MousePressed

    private void jList5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList5MousePressed

        try {

            for (int i = 0; i < areas.size(); i++) {
                if (jList5.getSelectedValue().equals(areas.get(i))) {

                    jList5.setSelectionBackground(defaultColor);

                    meals = JsonParsers.getAllMealByArea(jList5.getSelectedValue());

                    jList6.setModel(CommandList.updateModelMealList(meals));

                    /*for (int i = 0; i < mealCategories.size(); i++) {
                if (jList3.getSelectedValue().equals(mealCategories.get(i).getStrcategory())) {
                    
                    chossenMealCategory = mealCategories.get(i);
                    //put description etc
                    categoryInstructionsPnl.setText(chossenMealCategory.getStrcategorydescription());
                    
                    categoryInstructionsPnl.setCaretPosition(0);
                    jList3.setSelectionBackground(defaultColor);
                    //set image
                    try {
                        if (chossenMealCategory.getStrcategorythumb().contains("www")) {
                            ImageIcon image = new ImageIcon(new URL(chossenMealCategory.getStrcategorythumb()));
                            Image scaledImage = image.getImage().getScaledInstance(sbnImageLabel.getWidth(), sbnImageLabel.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon scaledIcon = new ImageIcon(scaledImage);
                            jLabelMealCategoryImage.setIcon(scaledIcon);
                            jLabelMealCategoryImage.setText("");
                            
                        }
                        
                    } catch (Exception e) {
                        jLabelMealCategoryImage.setIcon(null);
                        jLabelMealCategoryImage.setText("Image Not Available");
                    }
                    meals = JsonParsers.getAllMealByCategory(chossenMealCategory.getStrcategory());
                    JListMeal.setModel(CommandList.updateModelMealList(meals));*/
                }
            }
        } catch (Exception e) {
        }


    }//GEN-LAST:event_jList5MousePressed

    private void jList2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MousePressed
        try {

            for (int i = 0; i < ingredients.size(); i++) {
                if (jList2.getSelectedValue().equals(ingredients.get(i)[0])) {

                    // chossenMealCategory = mealCategories.get(i);
                    //put description etc
                    jTextPane1.setText(ingredients.get(i)[1]);

                    categoryInstructionsPnl.setCaretPosition(0);
                    jList2.setSelectionBackground(defaultColor);
                    //set image
                    try {
                        ImageIcon image = new ImageIcon(new URL("https://www.themealdb.com/images/ingredients/" + ingredients.get(i)[0] + ".png"));
                        Image scaledImage = image.getImage().getScaledInstance(jLabelMealIngreImage.getWidth(), jLabelMealIngreImage.getHeight(), Image.SCALE_SMOOTH);
                        ImageIcon scaledIcon = new ImageIcon(scaledImage);
                        jLabelMealIngreImage.setIcon(scaledIcon);
                        jLabelMealIngreImage.setText("");

                    } catch (Exception e) {
                        jLabelMealIngreImage.setIcon(null);
                        jLabelMealIngreImage.setText("Image Not Available");
                    }
                    meals = JsonParsers.getAllMealByIngridient(ingredients.get(i)[0]);
                    jList4.setModel(CommandList.updateModelMealList(meals));

                }
            }
        } catch (Exception e) {
        }

    }//GEN-LAST:event_jList2MousePressed

    private void jList4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList4MousePressed

        try {
            //String UserSelectedMeal = JListMeal.getSelectedValue();

            if (jList2.getSelectedValue() != null) {
                for (int i = 0; i < meals.size(); i++) {

                    if (jList4.getSelectedValue().equals(meals.get(i).getStrmeal())) {
                        CommandList.searchByMealID(meals.get(i).getIdmeal());
                        FocusPanel.setSelectedIndex(1);
                    }
                }
            }
        } catch (MalformedURLException ex) {
            //Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jList4MousePressed

    private void jList1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MousePressed
        if (ApiDataRadio.isSelected()) {
            for (int i = 0; i < meals.size(); i++) {
                if (meals.get(i).getStrmeal().equals(jList1.getSelectedValue())) {

                    try {

                        CommandList.searchedMealAndImportToGui(meals.get(i));
                        FocusPanel.setSelectedIndex(1);

                    } catch (MalformedURLException ex) {
                        Logger.getLogger(MainForm.class
                                .getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        } else if (DBdataRadio.isSelected()) {

            for (int i = 0; i < meals.size(); i++) {
                if (meals.get(i).getStrmeal().equals(jList1.getSelectedValue())) {

                    try {

                        //CommandList.searchedMealAndImportToGuiOnlyDB(meals.get(i));
                        MainForm.displayMeal(meals.get(i));
                        MealsQueryOperations.addVisit(meals.get(i).getStrmeal());
                        FocusPanel.setSelectedIndex(1);
                        jList1.setModel(new DefaultListModel<>());

                    } catch (MalformedURLException ex) {
                        Logger.getLogger(MainForm.class
                                .getName()).log(Level.SEVERE, null, ex);

                    }
                }

            }
        }

    }//GEN-LAST:event_jList1MousePressed

    private void ingredientsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ingredientsTableMouseClicked
        if (editMode == false) {
            FocusPanel.setSelectedIndex(2);
            String ingredient = ingredientsTable.getValueAt(ingredientsTable.getSelectedRow(), 0).toString();
            GeneralSearchPnl.setSelectedIndex(3);
            sbcComboBox.setSelectedIndex(3);
            ingredients = JsonParsers.getAllIngredient();
            DefaultListModel<String> model = CommandList.getIngredientsModel(ingredients);
            jList2.setModel(model);
            if ((model.isEmpty())) {
                MainForm.errorFound("Failed to grab Ingredients, please check your Internet connection!", "Error");
            } else {
                for (int i = 0; i < ingredients.size(); i++) {

                    if (ingredients.get(i)[0].equals(ingredient)) {
                        jList2.setSelectedIndex(i);
                        categoryInstructionsPnl.setCaretPosition(0);
                        jList2.setSelectionBackground(defaultColor);

                        jList2.ensureIndexIsVisible(jList2.getSelectedIndex());

                        //set image
                        try {
                            ImageIcon image = new ImageIcon(new URL("https://www.themealdb.com/images/ingredients/" + ingredients.get(i)[0] + ".png"));
                            Image scaledImage = image.getImage().getScaledInstance(jLabelMealIngreImage.getWidth(), jLabelMealIngreImage.getHeight(), Image.SCALE_SMOOTH);
                            ImageIcon scaledIcon = new ImageIcon(scaledImage);
                            jLabelMealIngreImage.setIcon(scaledIcon);
                            jLabelMealIngreImage.setText("");

                        } catch (Exception e) {
                            jLabelMealIngreImage.setIcon(null);
                            jLabelMealIngreImage.setText("Image Not Available");
                        }
                        meals = JsonParsers.getAllMealByIngridient(ingredients.get(i)[0]);
                        jList4.setModel(CommandList.updateModelMealList(meals));

                    }

                }

            }

        }
    }//GEN-LAST:event_ingredientsTableMouseClicked

    /**
     * @param args the command line arguments
     */
    /*
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    //</editor-fold>
    //</editor-fold>
    /* Create and display the form *//*
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton ApiDataRadio;
    private javax.swing.JPanel ByAreaPnl;
    private javax.swing.JPanel ByCategoryPnl;
    private javax.swing.JPanel ByIngredientPnl;
    private javax.swing.JPanel ByNamePnl;
    private javax.swing.JPanel CategoryDisplay;
    private javax.swing.JRadioButton DBdataRadio;
    private javax.swing.JTabbedPane FocusPanel;
    private javax.swing.JTabbedPane GeneralSearchPnl;
    private javax.swing.JPanel IntroPnl;
    private javax.swing.JList<String> JListMeal;
    private javax.swing.JPanel LeftPanel;
    private javax.swing.JPanel MainPanel;
    private javax.swing.JPanel MealDisplay;
    private javax.swing.JPanel MealPanel;
    private javax.swing.JPanel PieStatsPnl;
    private javax.swing.JButton RandomMealBtn;
    private javax.swing.JButton SearchByNameBtn;
    private javax.swing.JPanel StatsDisplay;
    private javax.swing.JTable StatsJTable;
    private javax.swing.JPanel TableStatsPnl;
    private javax.swing.JPanel TopPanel;
    private javax.swing.JPanel TwoDStatsPnl;
    private static javax.swing.JLabel UrlLblSbn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextPane categoryInstructionsPnl;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel extBtn;
    private static javax.swing.JTable ingredientsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelMealCategoryImage;
    private javax.swing.JLabel jLabelMealIngreImage;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList5;
    private javax.swing.JList<String> jList6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JPanel menuExitPnl;
    private javax.swing.JPanel menuSearchPnl;
    private javax.swing.JPanel menuStatsPnl;
    public javax.swing.JComboBox<String> sbcComboBox;
    private static javax.swing.JTextField sbnAreaTxt;
    private static javax.swing.JTextField sbnCategoryTxt;
    private static javax.swing.JLabel sbnImageLabel;
    private static javax.swing.JTextArea sbnInstructions;
    private static javax.swing.JTextField sbnMealNameTxt;
    private javax.swing.JButton sbnSaveBtn;
    private javax.swing.JButton sbnSearchBtn;
    private static javax.swing.JTextField sbnTxt;
    private javax.swing.JTextField searchByNameTxt;
    private javax.swing.JLabel statsBtn;
    private javax.swing.JComboBox<String> statsComboMenu;
    private javax.swing.JButton statsExpBtn;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables

    //Μέθοδος για τη λήψη των γευμάτων με βάση την κατηγορία τους
    private void fetchMealByCategory(String category) {
        // Δημιουργία ενός αντικειμένου τύπου CommandList για την αποστολή του αιτήματος στο API
        CommandList mealList = new CommandList();

        // Λήψη των γευμάτων για τη συγκεκριμένη κατηγορία
        List<String> meals = mealList.fetchMealsByCategory(category);

        // Συνένωση των ονομάτων των γευμάτων σε ένα μόνο κείμενο με διαχωριστικά ανά γραμμή
        StringBuilder mealText = new StringBuilder();
        for (String meal : meals) {
            mealText.append(meal).append("\n");
        }

    }

    //Μέθοδος για δημιουργία ερωτημάτων στο χρήστη για την προέλευση των δεδομένων του γεύματος
    public static int wantDataQuestion(String mealString) {
        // Δημιουργία των επιλογών για τον χρήστη
        Object[] options = {"DB", "API", "Cancel"};

        // Εμφάνιση παραθύρου επιλογών με την ερώτηση για την προέλευση των δεδομένων
        int choise = JOptionPane.showOptionDialog(null,
                mealString + " found in DB, would you like to show data from DB or API?",
                "Warning!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[2]);
        // Επιστροφή της επιλογής του χρήστη
        return choise;
    }

    //Μέθοδος για τη δημιουργία ερωτημάτων στο χρήστη για τη διαγραφή δεδομένων του γεύματος
    public static int wantDeleteQuestion(String mealString) {
        // Δημιουργία των επιλογών για τον χρήστη
        Object[] options = {"Delete", "Keep Statistics", "Cancel"};

        // Εμφάνιση παραθύρου επιλογών με την ερώτηση για τη διαγραφή δεδομένων
        int choise = JOptionPane.showOptionDialog(null,
                mealString + " data will be lost, choose what data you want to delete!",
                "Warning!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[2]);

        // Επιστροφή της επιλογής του χρήστη
        return choise;
    }

    //Μέθοδος για τη δημιουργία ερωτημάτων στο χρήστη με δύο επιλογές (Ναι/Όχι)
    public static int wantQuestionYesNo(String message) {
        // Δημιουργία των επιλογών για τον χρήστη
        Object[] options = {"Yes", "No"};

        // Εμφάνιση παραθύρου επιλογών με την ερώτηση για τη διαγραφή δεδομένων
        int choise = JOptionPane.showOptionDialog(null,
                message,
                "Warning!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);

        // Επιστροφή της επιλογής του χρήστη
        return choise;
    }

    //Μέθοδος για τη δημιουργία παραθύρου ενημέρωσης με ένα κουμπί (ΟΚ)
    public static int infomessage(String message) {
        // Δημιουργία των επιλογών για τον χρήστη
        Object[] options = {"OK"};

        // Εμφάνιση παραθύρου ενημέρωσης με το μήνυμα που δόθηκε σαν παράμετρο
        int choise = JOptionPane.showOptionDialog(null,
                message,
                "Information!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.INFORMATION_MESSAGE,
                null,
                options,
                options[0]);

        // Επιστροφή της επιλογής του χρήστη
        return choise;
    }

    //Μέθοδος για τη δημιουργία παραθύρου ενημέρωσης λάθους
    public static int errorFound(String message, String message2) {
        // Εμφάνιση παραθύρου με το μήνυμα λάθους που δόθηκε σαν παράμετρο
        JOptionPane.showMessageDialog(null,
                message,
                message2,
                JOptionPane.OK_OPTION);

        return 0;
    }

    //Μέθοδος για τη δημιουργία ερωτημάτων στο χρήστη με δύο επιλογές (Ναι/Όχι)
    public static int wantDataQuestionYesNo(String message) {

        // Δημιουργία των επιλογών για τον χρήστη
        Object[] options = {"Yes", "No"};

        // Εμφάνιση παραθύρου ερώτησης με το μήνυμα που δόθηκε σαν παράμετρο και τις επιλογές που δημιουργήθηκαν παραπάνω
        int choise = JOptionPane.showOptionDialog(null,
                message,
                "Warning!",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                options,
                options[0]);

        // Επιστροφή της επιλογής του χρήστη
        return choise;
    }

    //Μέθοδος για την εμφάνιση μιας συνταγής στο παράθυρο της εφαρμογής
    public static void displayMeal(Meal meal) throws MalformedURLException {
        // Εμφάνιση του ονόματος της συνταγής
        sbnMealNameTxt.setText(meal.getStrmeal());

        // Εμφάνιση της κατηγορίας της συνταγής
        sbnCategoryTxt.setText(meal.getStrcategory());

        // Εμφάνιση της περιοχής προέλευσης της συνταγής
        sbnAreaTxt.setText(meal.getStrarea());

        // Εμφάνιση των οδηγιών για την παρασκευή της συνταγής
        sbnInstructions.setText(meal.getStrinstructions());

        // Θέση του κέρσορα στην αρχή των οδηγιών
        sbnInstructions.setCaretPosition(0);

        // Λήψη των υλικών της συνταγής και εμφάνισή τους σε πίνακα
        Object[][] table = HelpCommands.getTable(meal);
        String[] columnNames = {"Ingredient", "Measure"};

        DefaultTableModel model = new DefaultTableModel(table, columnNames);

        ingredientsTable.setModel(new javax.swing.table.DefaultTableModel(table, columnNames));

        ingredientsTable
                .setDefaultEditor(Object.class,
                        null);
        // Εμφάνιση της εικόνας της συνταγής, αν υπάρχει διαθέσιμη εικόνα στο URL
        try {
            if (meal.getStrmealthumb().contains("www")) {
                ImageIcon image = new ImageIcon(new URL(meal.getStrmealthumb()));
                Image scaledImage = image.getImage().getScaledInstance(sbnImageLabel.getWidth(), sbnImageLabel.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon scaledIcon = new ImageIcon(scaledImage);
                sbnImageLabel.setIcon(scaledIcon);
                sbnImageLabel.setText(meal.getStrmealthumb());

            }

        } catch (Exception e) {
            sbnImageLabel.setIcon(null);
            sbnImageLabel.setText("Image Not Available");
        }

        // Εμφάνιση συνδέσμου για το βίντεο με οδηγίες, αν υπάρχει διαθέσιμος σύνδεσμος
        try {
            if (meal.getStryoutube().matches("^https?://.*$")) {
                UrlLblSbn.setText("<html><a href=\"" + meal.getStryoutube() + "\"><font color=white>Click here to watch instructions video.</a></html>");
                UrlLblSbn.setForeground(new Color(0xffffff));
                UrlLblSbn.setCursor(new Cursor(Cursor.HAND_CURSOR));
                MouseListener[] mouseListeners = UrlLblSbn.getMouseListeners();
                if (mouseListeners.length > 0) {
                    UrlLblSbn.removeMouseListener(mouseListeners[0]);
                }
                UrlLblSbn.addMouseListener(new MouseAdapter() {
                    @Override
                    public void mousePressed(MouseEvent e) {
                        if (Desktop.isDesktopSupported()) {
                            Desktop desktop = Desktop.getDesktop();
                            try {
                                desktop.browse(new URI(meal.getStryoutube()));
                            } catch (IOException | URISyntaxException ex) {
                                ex.printStackTrace();
                            }
                        }
                    }
                });
            } else {
                MouseListener[] mouseListeners = UrlLblSbn.getMouseListeners();
                if (mouseListeners.length > 0) {
                    UrlLblSbn.removeMouseListener(mouseListeners[0]);
                }
                UrlLblSbn.setCursor(Cursor.getDefaultCursor());
                UrlLblSbn.setText("No video link available");
            }
        } catch (Exception e) {
            MouseListener[] mouseListeners = UrlLblSbn.getMouseListeners();
            if (mouseListeners.length > 0) {
                UrlLblSbn.removeMouseListener(mouseListeners[0]);
            }
            UrlLblSbn.setCursor(Cursor.getDefaultCursor());
            UrlLblSbn.setText("No video link available");
        }

    }

}
